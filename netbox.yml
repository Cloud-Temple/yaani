netbox:
  api:
    # API section to specify url and token

    # This key is mandatory
    api_url: "<Netbox api url>"
    # api_token is optionnal
    # api_token: "<Netbox token>"

  import:
    # Import section indicates what elements to add in the inventory, how to group them
    # and allows filtering features.
    # 'import' section is optionnal and must be used only if some grouping, filtering or var loading feature is needed.
    # If present, this section must contain at least one section amongst the following : devices, racks, sites...

    devices:
      # the 'device' section configures import from Netbox on device objects.

      # The filter value is passed when requesting Netbox. It allows to narrow the fetch from netbox.
      # This field is optionnal
      # filter: "role_id=...&rack_id=..."

      # 'group_by' is an optionnal field. It expects a list and is used to configure the grouping feature.
      # The expected values are keys or compositions of keys appended to each others with dots. This allow to specify vars in nested dicts.
      # The keys must be present in Netbox objects.
      group_by:
        # - device_role.name
        # - rack.name
        - tags

      # The host_vars field is optionnal. It configures which variable form Netbox to load as hostvars in the inventory.
      host_vars:
        # The key is the name of the variable in the inventory. The value is the name of the key where to find the information
        # in the output returned by Netbox.
        # Example:
        rack_name: rack.name
        ip: primary_ip.address

        # The 'ALL' keyword as a value loads the entire dict returned by Netbox
        # example:
        # main: ALL
        #   If used this way, the 'main' key in the hostvars will contain all information for a host in Netbox

        # The values of this section have the same properties as the 'group_by' values, compositions of keys are accepted.
        # status_name: status.label
        # rack: rack.name

    # racks:
    #   host_vars:
    #     id: id
    # filter: "role_id=3"

